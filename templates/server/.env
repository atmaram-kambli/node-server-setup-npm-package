# 1. Frontend URL for Development
# This is the URL of your frontend application. It helps in setting up CORS or making API requests to the backend.
# By default, many frontend applications run on http://localhost:3000 (for example, in React development).
# Change the port number according to your actual frontend application configuration.
FRONTEND_URL=http://localhost:3000

# 2. MongoDB URI
# This is the connection string used to connect your Node.js application to the MongoDB database.
# You can either use a local MongoDB instance or a cloud-hosted MongoDB database (e.g., MongoDB Atlas).
# For local setup, the URI could be: mongodb://localhost:27017/your-database-name
# For cloud setup (e.g., MongoDB Atlas), you will be given a URI like: mongodb+srv://username:password@cluster0.mongodb.net/your-database-name
MONGODB_URI=mongodb://localhost:27017/mydatabase

# 3. Resend API Key
# Resend is a service that helps send emails or notifications programmatically. You need to sign up on Resend (https://resend.com/) 
# to get your API key. This key will allow your application to interact with Resend’s email or SMS services.
RESEND_API=your-resend-api-key


# 4. Cloudinary Credentials
# Cloudinary is a cloud-based image and video management service. It allows you to upload, manage, and deliver media assets.
# If your application handles images or media files, you’ll need to configure Cloudinary. 
# Sign up at https://cloudinary.com/users/register_free to get these credentials: cloud_name, api_key, and api_secret_key.
# If you don't need to use Cloudinary (e.g., your app doesn't handle media), you can leave these blank or comment them out.
CLOUDINARY_CLOUD_NAME=your-cloud-name
CLOUDINARY_API_KEY=your-api-key
CLOUDINARY_API_SECRET_KEY=your-api-secret-key


# 5. Secret Keys for Token Generation
# These secret keys are used to sign and verify JWT (JSON Web Tokens), which are commonly used for user authentication and session management.
# Make sure to generate a strong and secure key for production (you can use a password manager to generate a secure random string).
# Never expose these keys to the public or store them in version control.
SECRET_KEY_ACCESS_TOKEN=your-access-token-secret-key
SECRET_KEY_REFRESH_TOKEN=your-refresh-token-secret-key
